name: Build
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2.4.0
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Set up JDK (GraalVM)
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: 1.18.2-Purpur"
      - name: Pull Gradle Cache
        uses: actions/cache@v3.0.1
        id: gradle-cache
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-maven-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-java-17
      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "Github Actions"
      - name: Patch
        run: |
          ./gradlew -Dorg.gradle.jvmargs="-Dfile.encoding=UTF-8 -Djdk.nio.maxCachedBufferSize=262144 -Dgraal.CompilerConfiguration=community -Dgraal.UsePriorityInlining=true -Dgraal.Vectorization=true -Dgraal.OptDuplication=true -Dgraal.SpeculativeGuardMovement=true -Dgraal.WriteableCodeCache=true --add-modules jdk.incubator.vector" applyPatches --stacktrace --no-daemon
      - name: Build
        run: |
          ./gradlew -Dorg.gradle.jvmargs="-Dfile.encoding=UTF-8 -Djdk.nio.maxCachedBufferSize=262144 -Dgraal.CompilerConfiguration=community -Dgraal.UsePriorityInlining=true -Dgraal.Vectorization=true -Dgraal.OptDuplication=true -Dgraal.SpeculativeGuardMovement=true -Dgraal.WriteableCodeCache=true --add-modules jdk.incubator.vector" createReobfPaperclipJar --stacktrace --no-daemon
      - name: Archive Paperclip
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Mirai-Purpur-1.18.2
          path: build/libs/mirai-paperclip-1.18.2-R0.1-SNAPSHOT-reobf.jar
      
      
      - name: Automatic Releases
        # 您可以固定到确切的提交或版本.
        uses: marvinpinto/action-automatic-releases@latest
        with:
          # GitHub 秘密令牌
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # Git 标签（用于自动发布）
          automatic_release_tag: 'AR'
          # 是否应该将此版本标记为草稿？
          draft: false
          # 是否应将此版本标记为预发布？
          prerelease: true
          # 发布标题（用于自动发布）
          title: 'Mirai-Purpur'
          # 要上传到版本的资产
          files: build/libs/mirai-paperclip-1.18.2-R0.1-SNAPSHOT-reobf.jar

